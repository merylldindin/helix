name: helix

on:
  merge_group:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "22.14.0"

permissions:
  contents: read
  checks: write

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      cache-hit: ${{ steps.cache-dependencies.outputs.cache-hit }}

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.OS }}-helix-node-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-helix-node-${{ env.NODE_VERSION }}-
            ${{ runner.OS }}-helix-

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install

      - name: Prepare Environment
        run: yarn nuxt prepare

  lint:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Restore Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.OS }}-helix-node-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - name: Lint Checks
        run: |
          yarn prettier --check
          yarn eslint
          yarn stylelint

  build:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Restore Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.OS }}-helix-node-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - name: Bundle Application
        run: make build

      - name: Cache Build Output
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.OS }}-helix-build-${{ github.sha }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist
          retention-days: 1

  test:
    needs: [lint, build]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Restore Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.OS }}-helix-node-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - name: Restore Build Output
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.OS }}-helix-build-${{ github.sha }}

      - name: Cache Cypress
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.OS }}-cypress-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-cypress-

      - name: Run Cypress
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          command: yarn cypress
          install: false
          start: make serve
          wait-on: "http://localhost:3000/"
          wait-on-timeout: 60

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: |
            cypress/screenshots
            cypress/videos
          retention-days: 7
